/**
 * Styles / Base / Grid
 * -----------------------------------------------------------------------------
 * Base styles for rows, columns etc.
 */
.container {
  margin: 0 auto;
  max-width: map-get($map: $mq-breakpoints, $key: wide);
  padding: 0 $GUTTER_WIDTH * 1.5;
  width: 100%;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -#{$GUTTER_WIDTH / 2} $SPACING_M -#{$GUTTER_WIDTH / 2};

  &::after {
    clear: both;
    content: '';
    display: table;
  }

  &.no-margin-bottom {
    margin-bottom: 0;
  }

  .col {

    $i: 1;

    $i: 1;

    $i: 1;

    $i: 1;

    $i: 1;

    @while $i <= $NUM_COLS {
      $perc: unquote((100 / ($NUM_COLS / $i)) + '%');

      $i: $i + 1;
      @include grid-classes('xs', $i, $perc);
    }
    float: left;
    padding: 0 $GUTTER_WIDTH / 2;

    @include mq($from: small) {
      $i: 1;

      @while $i <= $NUM_COLS {
        $perc: unquote((100 / ($NUM_COLS / $i)) + '%');

        $i: $i + 1;
        @include grid-classes('s', $i, $perc);
      }
    }

    @include mq($from: medium) {
      $i: 1;

      @while $i <= $NUM_COLS {
        $perc: unquote((100 / ($NUM_COLS / $i)) + '%');

        $i: $i + 1;
        @include grid-classes('m', $i, $perc);
      }
    }

    @include mq($from: large) {
      $i: 1;

      @while $i <= $NUM_COLS {
        $perc: unquote((100 / ($NUM_COLS / $i)) + '%');

        $i: $i + 1;
        @include grid-classes('l', $i, $perc);
      }
    }

    @include mq($from: wide) {
      $i: 1;

      @while $i <= $NUM_COLS {
        $perc: unquote((100 / ($NUM_COLS / $i)) + '%');

        $i: $i + 1;
        @include grid-classes('w', $i, $perc);
      }
    }

    &[class*=push-],
    &[class*=pull-] {
      position: relative;
    }
  }
}
